# Version: MPL 1.1 / GPLv3+ / LGPLv3+
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License or as specified alternatively below. You may obtain a copy of
# the License at https://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# Major Contributor(s):
# Copyright (C) 2012 Red Hat, Inc., David Tardon <dtardon@redhat.com>
#  (initial developer)
#
# All Rights Reserved.
#
# For minor contributions see the git repository.
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 3 or later (the "GPLv3+"), or
# the GNU Lesser General Public License Version 3 or later (the "LGPLv3+"),
# in which case the provisions of the GPLv3+ or the LGPLv3+ are applicable
# instead of those above.

load_lib libreoffice.exp

libo_gdb_init $BINFILE $srcdir/$subdir

if { ![libo_load_printers [list cppu sal]] } {
    perror "could not load pretty printers"
    return
}

if { ![libo_runto stop] } {
    perror "the executable is not a proper pretty printer test"
    return
}

libo_pp_test "type_void" {uno::Type void}
libo_pp_test "type_boolean" {uno::Type "boolean"}
libo_pp_test "type_short" {uno::Type "short"}
libo_pp_test "type_long" {uno::Type "long"}
libo_pp_test "type_hyper" {uno::Type "hyper"}
libo_pp_test "type_float" {uno::Type "float"}
libo_pp_test "type_double" {uno::Type "double"}
libo_pp_test "type_char" {uno::Type "char"}
libo_pp_test "type_string" {uno::Type "string"}
libo_pp_test "type_type" {uno::Type "type"}
libo_pp_test "type_any" {uno::Type "any"}
libo_pp_test "type_sequence" {uno::Type "\[\]byte"}
libo_pp_test "type_sequence_sequence" {uno::Type "\[\]\[\]byte"}
libo_pp_test "type_enum" {uno::Type "com.sun.star.uno.TypeClass"}
libo_pp_test "type_struct" {uno::Type "com.sun.star.lang.EventObject"}
libo_pp_test "type_generic_struct" {uno::Type "com.sun.star.beans.Optional<byte>"}
libo_pp_test "type_exception" {uno::Type "com.sun.star.uno.Exception"}
libo_pp_test "type_interface" {uno::Type "com.sun.star.uno.XInterface"}
libo_pp_test "type_interface_reference" {uno::Type "com.sun.star.uno.XInterface"}
libo_pp_test "type_derived_interface" {uno::Type "com.sun.star.uno.XComponentContext"}

# vim:set shiftwidth=4 tabstop=4 expandtab:
