<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="_Main" script:language="StarBasic">&apos; Set of Macros used for Help Authoring
&apos; =====================================
&apos; Version
&apos; -------------------------------------
&apos;

&apos; #
&apos; # This file is part of the LibreOffice project.
&apos; #
&apos; # This Source Code Form is subject to the terms of the Mozilla Public
&apos; # License, v. 2.0. If a copy of the MPL was not distributed with this
&apos; # file, You can obtain one at https://mozilla.org/MPL/2.0/.
&apos; #
&apos; # This file incorporates work covered by the following license notice:
&apos; #
&apos; #   Licensed to the Apache Software Foundation (ASF) under one or more
&apos; #   contributor license agreements. See the NOTICE file distributed
&apos; #   with this work for additional information regarding copyright
&apos; #   ownership. The ASF licenses this file to you under the Apache
&apos; #   License, Version 2.0 (the &quot;License&quot;); you may not use this file
&apos; #   except in compliance with the License. You may obtain a copy of
&apos; #   the License at https://www.apache.org/licenses/LICENSE-2.0 .
&apos; #

Global Const Version = &quot;v3.1.5&quot;

Global Const strErr_NoHelpFile = &quot;Not a Help File&quot;

Global Const GitClient = &quot;git-gui&quot;

Global Const WebView = &quot;true&quot;

Global Const ConsoleTerminal = &quot;true&quot;

&apos;=======================================================
&apos; Main
&apos;-------------------------------------------------------
&apos; Ensure that necessary library functions are available
&apos;=======================================================
Sub Main
    GlobalScope.BasicLibraries.loadLibrary(&quot;Tools&quot;)
End Sub

&apos;=======================================================
&apos; SetMetaDataOnSave
&apos;-------------------------------------------------------
&apos; Sets the document meta data. It is called when
&apos; the document is saved. It changes the data and
&apos; then saves it again.
&apos;=======================================================
Sub SetMetaDataOnSave(Path as String)

    document = StarDesktop.CurrentComponent
    sDocRoot = GetDocumentRoot()

    If Path = &quot;&quot; Then
        Path = document.URL
    End If

    If not(IsSubDir(Path,sDocRoot)) Then &apos; doesn&apos;tr work when resaving the file since it contains the OLD url (before resave)
        msgbox(&quot;The File&quot;+chr(13)+Path+chr(13)+&quot;is outside of your Document Root&quot;+chr(13)+sDocRoot+chr(13)+chr(13)+&quot;You may want to adjust your document root settings and re-save the file.&quot;,48,&quot;Warning&quot;)
    Else
        nSlash = 0
        If Right(sDocRoot,1) = &quot;/&quot; Then
            nSlash = 1
        End If
        Path = Right(Path,Len(Path)-Len(sDocRoot)+nSlash)
    End If

&apos;    document.DocumentInfo.SetUserFieldName(0,&quot;Indexer&quot;)
&apos;    document.DocumentInfo.SetUserFieldName(1,&quot;ID&quot;)
&apos;&apos;    document.DocumentInfo.SetUserFieldName(2,&quot;Comment&quot;)
&apos;    document.DocumentInfo.SetPropertyValue(&quot;Subject&quot;,Path)

    &apos;document.DocumentProperties.UserDefinedProperties.Indexer = &quot;&quot; &apos; Present in template properties
    &apos;document.DocumentProperties.UserDefinedProperties.ID = &quot;&quot; &apos; Present in template properties
&apos;    document.DocumentInfo.SetUserFieldName(2,&quot;Comment&quot;)
    document.DocumentProperties.Subject = Path

	If document.DocumentProperties.Title = &quot;&quot; Then
        if WebView = &quot;true&quot; then
        	goKey( &quot;.uno:BrowseView&quot; )
        end if

		Ret = msgbox( &quot;Automatically generate a basic help file?&quot;, 1+32, &quot;Basic Help File&quot; )
		If Ret = 2 Then
			Exit Sub
		End if
	
		document.DocumentProperties.UserDefinedProperties.ID = Replace( AlphaNum(Path), &quot;xhp&quot;, &quot;xml&quot; )

		title = inputbox(&quot;The help title is a few word description of the help file topic.&quot;,&quot;Enter Help Title&quot;)
		If title = &quot;&quot; Then
			title = &quot;Help Title&quot;
		End If
		document.DocumentProperties.Title = title

		InsertText( title )
        InsertTag(&quot;_LINK&quot;,&quot;&lt;/LINK&gt;&quot;)
		InsertNewParaData()
		InsertTag(&quot;LINK_&quot;,&quot;&lt;LINK href=&quot;&quot;&quot; + Right( Path, Len(Path) - 1 ) + &quot;&quot;&quot;&gt;&quot;)
		CR()

		SetParaStyle(&quot;hlp_paragraph&quot;)
		SetCharStyle(&quot;Default Style&quot;)
		desc = inputbox(&quot;The help description is a sentence of text to further describe the help title.&quot;+chr(10)+&quot;example: This menu contains commands for editing the contents of the current document.&quot;,&quot;Enter Help Description&quot;)
		If desc = &quot;&quot; Then
			desc = &quot;Help description&quot;
		End If
		InsertTag(&quot;AVIS_&quot;,&quot;&lt;AVIS hid=&quot;&quot;.&quot;&quot;&gt;&quot;)
		SetCharStyle(&quot;Default Style&quot;)
		InsertText( desc )
		InsertTag(&quot;_AVIS&quot;,&quot;&lt;/AVIS&gt;&quot;)
		InsertNewParaData()
		CR()

		SetParaStyle(&quot;hlp_paragraph&quot;)
		SetCharStyle(&quot;Default Style&quot;)
		startTyping = &quot;Start Typing Here...&quot;
		InsertText( startTyping )
		InsertNewParaData()

		goKey( &quot;.uno:GoToStartOfLine&quot; )
		goLeft(1)
		
		goKey( &quot;.uno:StartOfParaSel&quot;, 1, 1 )
		goUp( 1, 1 )
		goKey( &quot;.uno:StartOfParaSel&quot;, 1, 1 )

		InsertSection( lcase( AlphaNum( Replace( title, &quot; &quot;, &quot;_&quot; ) ) ) )

		sHID = inputbox(&quot;A help ID (hID) is a unique reference key to context-sensitive help when a user uses the F1 key or the Help button. There are two types: UNO commands and Symbolic names.&quot;+chr(10)+&quot;examples: .uno:InsertCtrl, SID_FM_CONVERTTO_IMAGECONTROL&quot;,&quot;Enter Help ID (hID)&quot;,&quot;.uno:&quot; )
		if sHID &lt;&gt; &quot;&quot; and sHID &lt;&gt; &quot;.uno:&quot; then
			goKey( &quot;.uno:GoToPrevPara&quot; )
			goKey( &quot;.uno:GoToPrevPara&quot; )
			CR_before()
			goUp(1)
			SetParaStyle(&quot;hlp_aux_bookmark&quot;)
			SetCharStyle(&quot;hlp_aux_tag&quot;)
			InsertTag(&quot;BOOKMARK&quot;,&quot;&lt;BOOKMARK branch=&quot;&quot;hid/&quot; + sHID + &quot;&quot;&quot; id=&quot;&quot;bm_id&quot; + CreateID + &quot;&quot;&quot; localize=&quot;&quot;false&quot;&quot;/&gt;&quot;)
		else
			goKey( &quot;.uno:GoToPrevPara&quot; )
		end if

		goKey( &quot;.uno:GoToEndOfDoc&quot; ) &apos; will stop at end of section instead of end of doc
		goRight( 2 )
		goRight( len(startTyping), 1 )
	end if

End Sub

&apos;=======================================================
&apos; ValidateOnSave
&apos;-------------------------------------------------------
&apos; Ensures that the document is validated when saved
&apos; should be bound to the &quot;Document Save&quot; event but
&apos; currently isn&apos;t
&apos;=======================================================
Sub ValidateOnSave
    BasicLibraries.LoadLibrary(&quot;HelpAuthoring&quot;)
    document = StarDesktop.CurrentComponent
    If document.URL &lt;&gt; &quot;&quot; Then &apos; not initial save
        If IsHelpFile Then
            SetMetaDataOnSave(&quot;&quot;)
            ValidateXHP
        End If
    End If
End Sub


&apos;=======================================================
&apos; CreateFile
&apos;-------------------------------------------------------
&apos; Creates a new help file based on the help template
&apos; and calls the save dialog
&apos;=======================================================
Sub CreateFile
    GlobalScope.BasicLibraries.loadLibrary(&quot;Tools&quot;)
    oPath = createUNOService(&quot;com.sun.star.util.PathSettings&quot;)
    arPaths = Split(oPath.Template,&quot;;&quot;)  &apos; get the paths to the templates from the configuration
    sHelpTemplate = &quot;&quot;

    &apos; change stw extension to ott extension for template

    For i=0 to ubound(arPaths)  &apos; see if the template path contains the help template
        If FileExists(arPaths(i)+&quot;/Help/xmlhelptemplate.ott&quot;) Then
            sHelpTemplate = arPaths(i)+&quot;/Help/xmlhelptemplate.ott&quot;
        End If
    Next i

    If sHelpTemplate = &quot;&quot; Then
        msgbox &quot;Cannot find the help template.&quot;,256
    Else
        oDoc = StarDesktop.loadComponentFromURL(sHelpTemplate,&quot;_blank&quot;,0,Array())
        SaveAs(oDoc)
    End If

End Sub

&apos;=======================================================
&apos; SaveAs
&apos;-------------------------------------------------------
&apos; Initially saves a new help file on creation.
&apos; Is called from CreateFile
&apos;=======================================================
Sub SaveAs(oDoc As Object)
Dim ListAny(0) as Long
Dim oStoreProperties(0) as New com.sun.star.beans.PropertyValue
    On Local Error Goto ERRHANDLE:

    sLastSaveDir = ReadConfig(&quot;LastSaveDir&quot;)
    sDocRoot = GetDocumentRoot()

    ListAny(0) = com.sun.star.ui.dialogs.TemplateDescription.FILESAVE_AUTOEXTENSION_PASSWORD
    oFileDialog = CreateUnoService(&quot;com.sun.star.ui.dialogs.FilePicker&quot;)
    oFileDialog.Initialize(ListAny())

    If sLastSaveDir &lt;&gt; &quot;&quot; AND IsSubDir(sLastSaveDir,sDocRoot) Then
        oFileDialog.setDisplayDirectory(sLastSaveDir)
    Else
        oFileDialog.setDisplayDirectory(sDocRoot)
    End If

    oMasterKey = GetRegistryKeyContent(&quot;org.openoffice.Office.TypeDetection/&quot;)
    oFilters() = oMasterKey.Filters
    oFileDialog.AppendFilter(&quot;Help&quot;, &quot;*.xhp&quot;)

    oFileDialog.SetTitle(&quot;Save Help File As&quot;)
    iAccept = oFileDialog.Execute()
    If iAccept = 1 Then
        WriteConfig(&quot;LastSaveDir&quot;,oFileDialog.getDisplayDirectory+&quot;/&quot;)
        sPath = oFileDialog.Files(0)
        oStoreProperties(0).Name = &quot;FilterName&quot;
        oStoreProperties(0).Value = &quot;XHP_Help&quot;
        SetMetaDataOnSave(sPath)
        oDoc.StoreAsUrl(sPath, oStoreProperties())
    Else
        msgbox &quot;You must save a help document before you can work on it.&quot;+chr(13)+&quot;This document will be disposed.&quot;, 48
        oDoc.dispose
    End If
    oFileDialog.Dispose()

    ERRHANDLE:
        If Err &lt;&gt; 0 Then
            msgbox &quot;Error: &quot;+chr(13)+ Error$+chr(13)+&quot;Cannot save file.&quot;+chr(13),48,&quot;Fatal Error&quot;
            oDoc.dispose
        End If
End Sub

Sub CheckOnLoad
&apos;    oDoc = StarDesktop.CurrentComponent
&apos;    sDocRoot = GetDocumentRoot()
&apos;    If sDocRoot=&quot;&quot; Then
&apos;        msgbox(&quot;No document root set. Please set the root folder for your documents.&quot;)
&apos;        sDocRoot = SetDocumentRoot
&apos;    End If
&apos;    msgbox(HasUnoInterfaces(oDoc, &quot;com.sun.star.lang.XServiceInfo&quot;))
&apos;    sFName = oDoc.URL
&apos;    msgbox(sFName+chr(13)+sDocRoot)
&apos;    If not(IsSubDir(sFName,sDocRoot)) Then
&apos;        msgbox(&quot;The file is located outside of your Document Root&quot;+chr(13)+sDocRoot+chr(13)+chr(13)+&quot;Please adjust your document root settings to avoid trouble with links, transcludes and images!&quot;,48,&quot;Warning!&quot;)
&apos;    End If
End Sub

Sub DisplayVersion
    msgbox &quot;LibreOffice Help Authoring Framework&quot;+chr(13)+&quot;Version &quot;+Version,256
End Sub

Sub OpenXHP
Dim ListAny(0) as Long
Dim FileProperties(1) As New com.sun.star.beans.PropertyValue

    sLastSaveDir = ReadConfig(&quot;LastSaveDir&quot;)
    sDocRoot = GetDocumentRoot()
    ListAny(0) = com.sun.star.ui.dialogs.TemplateDescription.FILEOPEN_SIMPLE
    oFileDialog = CreateUnoService(&quot;com.sun.star.ui.dialogs.FilePicker&quot;)
    oFileDialog.Initialize(ListAny())
    If sLastSaveDir &lt;&gt; &quot;&quot; AND IsSubDir(sLastSaveDir,sDocRoot) Then
        oFileDialog.setDisplayDirectory(sLastSaveDir)
    Else
	    oFileDialog.DisplayDirectory = sDocRoot
    End If
    oFileDialog.AppendFilter(&quot;Help&quot;, &quot;*.xhp&quot;)
    oFileDialog.SetTitle(&quot;Open Help File&quot;)
    iAccept = oFileDialog.Execute()
    If iAccept = 1 Then
        WriteConfig(&quot;LastSaveDir&quot;,oFileDialog.getDisplayDirectory+&quot;/&quot;)
        sPath = oFileDialog.Files(0)
        FileProperties(0).Name = &quot;FilterName&quot;
        FileProperties(0).Value =&quot;XHP_Help&quot;
        oDoc = StarDesktop.loadComponentFromURL(sPath, &quot;_blank&quot;, 0, FileProperties())
        if WebView = &quot;true&quot; then
        	goKey( &quot;.uno:BrowseView&quot; )
        end if
    End If
    oFileDialog.Dispose()
End Sub

Sub OpenXHPText( optional doc_url as string )
    If not IsHelpFile Then
        msgbox( strErr_NoHelpFile )
        Exit Sub
    End If

	if ismissing(doc_url) or doc_url = 0 then
		document = StarDesktop.CurrentComponent
		doc_url = convertfromurl( document.URL )
	end if

	Dim oSvc as Object
	oSvc = createUnoService(&quot;com.sun.star.system.SystemShellExecute&quot;)

	Select Case getOS()
		Case &quot;WIN&quot; : oSvc.execute( &quot;explorer&quot;, doc_url, 0)
		Case &quot;OSX&quot; : oSvc.execute( &quot;open&quot;, doc_url, 0) &apos; this hasnt been tested yet
		Case &quot;UNIX&quot; : oSvc.execute( &quot;xdg-open&quot;, doc_url, 0)
	End Select
End Sub

Sub OpenGitCompare
	Dim oSvc as Object
	document = StarDesktop.CurrentComponent
	oSvc = createUnoService(&quot;com.sun.star.system.SystemShellExecute&quot;)

	systemOS = getOS()

	if systemOS = &quot;UNIX&quot; then
		sDocRoot = convertfromurl( ReadConfig(&quot;HelpPrefix&quot;) )

		Terminal = ConsoleTerminal
        WorkDirArg = &quot; --working-directory=&quot;
		HoldArg = &quot; -H&quot;

		if FileExists(&quot;/usr/bin/xfce4-terminal&quot;) and Terminal = &quot;&quot; then
			Terminal = &quot;xfce4-terminal&quot;
		elseif FileExists(&quot;/usr/bin/mate-terminal&quot;) and Terminal = &quot;&quot; then
			Terminal = &quot;mate-terminal&quot;
		elseif FileExists(&quot;/usr/bin/gnome-terminal&quot;) and Terminal = &quot;&quot; then
			Terminal = &quot;gnome-terminal&quot;
		elseif FileExists(&quot;/usr/bin/konsole&quot;) and ( Terminal = &quot;&quot; or Terminal = &quot;konsole&quot; ) then
			Terminal = &quot;konsole&quot;
			WorkDirArg = &quot; --workdir &quot;
			HoldArg = &quot; --hold&quot;
		end if

		if FileExists(&quot;/usr/bin/git-cola&quot;) and ( GitClient = &quot;&quot; or GitClient = &quot;git-cola&quot; ) then
			shell( Terminal + HoldArg + WorkDirArg + sDocRoot + &quot; -e git-cola&quot;, 0 )

		elseif FileExists(&quot;/usr/bin/git&quot;) and ( GitClient = &quot;&quot; or GitClient = &quot;git-gui&quot; ) then
			shell( &quot;git -C &quot; + sDocRoot + &quot; gui&quot;, 0 )

		elseif FileExists(&quot;/usr/bin/gitk&quot;) and ( GitClient = &quot;&quot; or GitClient = &quot;gitk&quot; ) then
			shell( Terminal + WorkDirArg + sDocRoot + &quot; -e gitk&quot;, 0 )

		elseif FileExists(&quot;/usr/bin/gitg&quot;) and ( GitClient = &quot;&quot; or GitClient = &quot;gitg&quot; ) then
			shell( &quot;gitg &quot; + sDocRoot, 0 )

		elseif FileExists(&quot;/usr/bin/giggle&quot;) and ( GitClient = &quot;&quot; or GitClient = &quot;giggle&quot; ) then
			shell( &quot;giggle -d &quot; + sDocRoot, 0 )

		end if
	else
		msgbox &quot;This feature is only available on Unix systems&quot;
	end if
End Sub

Sub OpenLink
    If not IsHelpFile Then
        msgbox( strErr_NoHelpFile )
        Exit Sub
    End If

	oVC = ThisComponent.CurrentController.getViewCursor
	If oVC.isCollapsed Then
	 	msgbox &quot;Please select a &lt;embed&gt;, &lt;embedvar&gt; or &lt;link&gt; tag.&quot;
	 Else
	 	link_start = instr(oVC.String,&quot;&lt;LINK&quot;)
	 	embed_start = instr(oVC.String,&quot;&lt;EMBED&quot;)
	 	If link_start Or embed_start Then
	 		If link_start Then
	 			href_start = instr( link_start, oVC.String, &quot;href=&quot;&quot;&quot; )
	 		Else
	 			href_start = instr( embed_start, oVC.String, &quot;href=&quot;&quot;&quot; )
	 		End If 
 			href_end = instr( href_start + 6, oVC.String, &quot;&quot;&quot;&quot; )
			href = mid( oVC.String, href_start + 6, href_end - href_start - 6 )
			section_start = instr( href, &quot;#&quot; )
			section = &quot;&quot;
			If section_start Then
				section = mid( href, section_start + 1, len(href) - section_start )
				href = mid( href, 1, section_start - 1 )
			End If

			sPath = ReadConfig(&quot;HelpPrefix&quot;) + href
			if StarDesktop.CurrentComponent.URL = sPath then
				msgbox &quot;Cant open currently open help file&quot;
			else
				Dim FileProperties(1) As New com.sun.star.beans.PropertyValue
				FileProperties(0).Name = &quot;FilterName&quot;
		        FileProperties(0).Value =&quot;XHP_Help&quot;
		        oDoc = StarDesktop.loadComponentFromURL(sPath, &quot;_blank&quot;, 0, FileProperties())
		        if WebView = &quot;true&quot; then
		        	goKey( &quot;.uno:BrowseView&quot; )
		        end if
		        if section &lt;&gt; &quot;&quot; then
		        	FindLink( oDoc, section )
		        end if
		     end if
	 	Else
	 		msgbox &quot;Please select a &lt;embed&gt;, &lt;embedvar&gt; or &lt;link&gt; tag.&quot;
	 	End If 
	EndIf
End Sub

Sub OpenLinkSource
    If not IsHelpFile Then
        msgbox( strErr_NoHelpFile )
        Exit Sub
    End If

	oVC = ThisComponent.CurrentController.getViewCursor
	If oVC.isCollapsed Then
	 	msgbox &quot;Please select a &lt;embed&gt;, &lt;embedvar&gt; or &lt;link&gt; tag.&quot;
	 Else
	 	link_start = instr(oVC.String,&quot;&lt;LINK&quot;)
	 	embed_start = instr(oVC.String,&quot;&lt;EMBED&quot;)
	 	If link_start Or embed_start Then
	 		If link_start Then
	 			href_start = instr( link_start, oVC.String, &quot;href=&quot;&quot;&quot; )
	 		Else
	 			href_start = instr( embed_start, oVC.String, &quot;href=&quot;&quot;&quot; )
	 		End If 
 			href_end = instr( href_start + 6, oVC.String, &quot;&quot;&quot;&quot; )
			href = mid( oVC.String, href_start + 6, href_end - href_start - 6 )
			section_start = instr( href, &quot;#&quot; )
			section = &quot;&quot;
			If section_start Then
				section = mid( href, section_start + 1, len(href) - section_start )
				href = mid( href, 1, section_start - 1 )
			End If

			sPath = ReadConfig(&quot;HelpPrefix&quot;) + href
			if StarDesktop.CurrentComponent.URL = sPath then
				msgbox &quot;Cant open currently open help file&quot;
			else
				OpenXHPText( sPath )
		    end if
	 	Else
	 		msgbox &quot;Please select a &lt;embed&gt;, &lt;embedvar&gt; or &lt;link&gt; tag.&quot;
	 	End If 
	EndIf
End Sub

Sub ReloadXHP
    If not IsHelpFile Then
        msgbox( strErr_NoHelpFile )
        Exit Sub
    End If

	document = StarDesktop.CurrentComponent
	Dim FileProperties(1) As New com.sun.star.beans.PropertyValue
	FileProperties(0).Name = &quot;FilterName&quot;
	FileProperties(0).Value =&quot;XHP_Help&quot;

	path = document.URL
	document.close(-1)
	oDoc = StarDesktop.loadComponentFromURL(path, path, 0, FileProperties())
   if WebView = &quot;true&quot; then
      goKey( &quot;.uno:BrowseView&quot; )
   end if
End Sub

Sub UnhideParaIDs
    oDoc = StarDesktop.CurrentComponent
    Enum = oDoc.Text.createEnumeration

    Do While Enum.hasMoreElements
        TE = Enum.nextElement

        If TE.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then
		    If Left(TE.ParaStyleName,4) = &quot;hlp_&quot; AND Not(Left(TE.ParaStyleName,8) = &quot;hlp_aux_&quot;) Then
		        sText = TE.GetString
		
		        If sText &lt;&gt; &quot;&quot; Then
		            TP = TE.createEnumeration
		            Ct = 0
		            posID = 0
		
		            While TP.hasmoreElements
		                Ct = Ct+1
		                TPE = TP.nextElement
		                If TPE.TextPortionType=&quot;TextField&quot; Then
		                    If TPE.TextField.TextFieldMaster.Name=&quot;ID&quot; Then
		                        TPE.TextField.IsVisible = TRUE
		                    End If
		                End If
		                If TPE.String = &quot;&quot; Then
		                    Ct = Ct-1
		                End If
		            Wend
		        End If
		    End If
        End If
    Loop
End Sub

Sub FindLink( oDoc, section )
    oDoc = StarDesktop.CurrentComponent
    Enum = oDoc.Text.createEnumeration

    Do While Enum.hasMoreElements
        TE = Enum.nextElement

		If TE.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then
			if instr( lcase(TE.GetString), &quot;id=&quot;&quot;&quot; + section + &quot;&quot;&quot;&quot; ) then
		        oCur = TE.getText.createTextCursorByRange(TE)
	    	    thiscomponent.getcurrentcontroller.select(oCur)
	    	    exit sub
	    	end if
	    end if
   Loop
End Sub
</script:module>
