<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>sync local LibreOffice repositories for 3.4.x versions</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/usr/bin/env python

import os
import os.path
import subprocess

workspace = os.environ[&apos;WORKSPACE&apos;]
baseurl = &apos;https://git.libreoffice.org/&apos;
repos = [&apos;artwork&apos;, &apos;base&apos;, &apos;bootstrap&apos;, &apos;calc&apos;, &apos;components&apos;, &apos;extensions&apos;, &apos;extras&apos;, &apos;filters&apos;, &apos;help&apos;, &apos;impress&apos;, &apos;libs-core&apos;, &apos;libs-extern&apos;, &apos;libs-extern-sys&apos;, &apos;libs-gui&apos;, &apos;postprocess&apos;, &apos;sdk&apos;, &apos;testing&apos;, &apos;ure&apos;, &apos;writer&apos;]

state = []
for (repo, repodir) in ((repo, os.path.join(workspace, repo+&apos;.git&apos;)) for repo in repos):
    if os.path.isdir(repodir):
        os.chdir(repodir)
        os.system(&apos;git fetch --all --tags&apos;)
    else:
	os.mkdir(repodir)	
        os.system(&apos;git clone --bare --mirror %s%s %s&apos; % (baseurl, repo, repodir))
    os.chdir(repodir)
    state.append(&apos;%s:\n&apos; % repo)
    for line in subprocess.check_output([&apos;git&apos;, &apos;branch&apos;, &apos;--verbose&apos;]).split(&apos;\n&apos;):
        state.append(&apos;    %s\n&apos; % line)

open(os.path.join(workspace, &apos;gitstate.txt&apos;),&apos;w&apos;).writelines(state)
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>

